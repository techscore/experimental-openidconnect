apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    appGroup: hydra
    volume.alpha.kubernetes.io/storage-class: default
  name: hydra-data
  namespace: hydra
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
data:
  system.secret: cEhuVDFjRkVjeWw5QXZXNDlVWGdRSjh3SmtIS1Z3TDNUZ3Yza002RTFUM2Z0M01zNG53c0M4ckU3ZVVsRnN3MGxLUnJ6VGFkeGk1RDZPb2tIUGhycjdFNzlTSFRRaUMwM1R5bw==
kind: Secret
metadata:
  annotations:
    appGroup: hydra
  name: hydra-secret
  namespace: hydra
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    appGroup: hydra
  labels:
    application: hydra
  name: hydra-admin-service
  namespace: hydra
spec:
  ports:
  - name: admin
    port: 80
    protocol: TCP
    targetPort: 4445
  selector:
    application: hydra
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    appGroup: hydra
  labels:
    application: hydra
  name: hydra-service
  namespace: hydra
spec:
  ports:
  - name: public
    port: 80
    protocol: TCP
    targetPort: 4444
  selector:
    application: hydra
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    appGroup: hydra
  labels:
    application: hydra
  name: hydra
  namespace: hydra
spec:
  replicas: 2
  selector:
    matchLabels:
      application: hydra
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        appGroup: hydra
      labels:
        application: hydra
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: application
                  operator: In
                  values:
                  - hydra
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - command:
        - hydra
        - serve
        - all
        - --dangerous-force-http
        env:
        - name: SYSTEM_SECRET
          valueFrom:
            secretKeyRef:
              key: system.secret
              name: hydra-secret
        - name: DATABASE_URL
          value: postgres://hydra:secret@postgres:5432/hydra?sslmode=disable
        - name: HTTPS_ALLOW_TERMINATION_FROM
          value: 0.0.0.0/0
        - name: LOG_LEVEL
          value: debug
        - name: OAUTH2_ISSUER_URL
          value: https://hydra-public-api.synergy-example.com:30443
        - name: OAUTH2_CONSENT_URL
          value: http://localhost:3000/consent
        - name: OAUTH2_LOGIN_URL
          value: http://localhost:3000/login
        - name: ACCESS_TOKEN_LIFESPAN
          value: 1h
        - name: ID_TOKEN_LIFESPAN
          value: 1h
        image: oryd/hydra:v1.0.0-rc.6_oryOS.10-alpine
        name: hydra
        ports:
        - containerPort: 4444
          name: public-port
        - containerPort: 4445
          name: admin-port
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 128Mi
        volumeMounts:
        - mountPath: hydra-data
          name: hydra-data
      terminationGracePeriodSeconds: 60
      volumes:
      - name: hydra-data
        persistentVolumeClaim:
          claimName: hydra-data
      - name: hydra-secret
        secret:
          secretName: hydra-secret
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    appGroup: hydra
    kubernetes.io/ingress.class: nginx
  name: hydra-public-ingress
  namespace: hydra
spec:
  rules:
  - host: hydra-public-api.synergy-example.com
    http:
      paths:
      - backend:
          serviceName: hydra-service
          servicePort: 80
  - host: hydra-admin-api.synergy-example.com
    http:
      paths:
      - backend:
          serviceName: hydra-admin-service
          servicePort: 80
  tls:
  - hosts:
    - hydra-public-api.synergy-example.com
    - hydra-admin-api.synergy-example.com
